#1. Создать модуль, который позволит указывать название компании-производителя и получать его. Подключить модуль к классам Вагон и Поезд
#2. Создать модуль InstanceCounter, содержащий следующие методы класса и инстанс-методы, которые подключаются автоматически при вызове include в классе:
# • Методы класса:
#    - instances, который возвращает кол-во экземпляров данного класса
# • Инстанс-методы:
#    - register_instance, который увеличивает счетчик кол-ва экземпляров класса и который можно вызвать из конструктора. При этом данный метод не должен быть публичным.
# • Подключить этот модуль в классы поезда, маршрута и станции.
# Примечание: инстансы подклассов могут считаться по отдельности, не увеличивая счетчик инстансов базового класса (для этого мне нужно использовать инстанс переменные класса).
# для совмещения методов класса и инстанс методов (занятие 5 00:32) добавляем еще два модуля - ClassMethods и InstanceMethod
module Manufacturer
  def set_manufacturer(manufacturer)
    @manufacturer = manufacturer
  end

  def get_manufacturer
    @manufacturer
  end
end

module InstanceCounter
  def self.included(base)                # это нужно чтобы в классе, в котором подключаем этот модуль было достаточно написать include InstanceCounter, вместо "extend InstanceCounter::ClassMethods" и "include InstanceCounter::InstanceMethods" (занятие 5 00:38)
    base.extend ClassMethods                # так подключаются методы класса
    base.send :include, InstanceMethods       # так инстанс методы
  end

  module ClassMethods
    attr_accessor :instances              # создаем и подключаем переменную класса instances, которая будет хранить кол-во экземпляров класса
    def instances                         # метод класса - возвращает кол-во экземпляров данного класса
      @instances 
    end
  end

  module InstanceMethods
    protected                 # доступ к методам инстанс методам должен быть ограничен, но при этом в наследовании метод должен работать, потому protected (еа самом деле, private тожк будет работать)
    def register_instance     # instance метод - увеличивает счетчик кол-ва экземпляров класса, можно вызвать из конструктора
      self.class.instances ||= 0        # Без этой строки не будет условия для правильного начального и последующего значения счетчика. Если просто присвоить первоначально 0, то при добавлении новых экземпляров (поезд, вагон), счетик не будет увеличиваться. ||= 0 означает, что если переменной instances уже что-то присвоено, то ничего не присваиваем, оставляя текущее значение(по сути присваиваем текущее значение). Если ничего не присвоено (т.е там nil), присваиваем 0. Если непонятно, смотри файл RoR_from_zero\CodeAcademy\Operators\or_equal.rb
      self.class.instances += 1         #!!! для того чтобы вызвать из инстанс метода (register_instance) метод класса (instances) нужно писать self затем class затем метод класса
    end
  end
end
